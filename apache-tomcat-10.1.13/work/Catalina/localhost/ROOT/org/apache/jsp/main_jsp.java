/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.13
 * Generated at: 2023-12-01 05:53:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import java.util.Arrays;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Arrays");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Game Store</title>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Add your CSS styles here */\r\n");
      out.write("        .filter-menu {\r\n");
      out.write("            display: none;\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            top: 30px;\r\n");
      out.write("            left: 0;\r\n");
      out.write("            background-color: black;\r\n");
      out.write("            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            z-index: 1;\r\n");
      out.write("            width:200px;\r\n");
      out.write("            height:200px;\r\n");
      out.write("          \r\n");
      out.write("            font-size:20px;\r\n");
      out.write("            color:white;\r\n");
      out.write("        }\r\n");
      out.write("        .filter-menu label {\r\n");
      out.write("            font-size:25px;\r\n");
      out.write("        }\r\n");
      out.write("        .filter-btn {\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        .filter-menu button {\r\n");
      out.write("            margin-left:150px;\r\n");
      out.write("        }\r\n");
      out.write("        .filter-menu .exitbtnFilter{\r\n");
      out.write("            margin-left:170px;\r\n");
      out.write("            background-color: black;\r\n");
      out.write("            color:red;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            border:none;\r\n");
      out.write("            font-size:25px;\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("        .logo{\r\n");
      out.write("            height:30px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("        }\r\n");
      out.write("        .logo:hover {\r\n");
      out.write("            background: none; /* Remove the background on hover */\r\n");
      out.write("        }   \r\n");
      out.write("      \r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"main\">\r\n");
      out.write("    ");

        if (session.getAttribute("loggedIn") == null || !((boolean) session.getAttribute("loggedIn"))) {
            response.sendRedirect("login.jsp");
        }
    
      out.write("\r\n");
      out.write("    <div class=\"overlay\" id=\"overlay\"></div>\r\n");
      out.write("    <div class=\"navbar\">\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li><a href=\"/main.jsp\"><img src=\"logo3.png\" class=\"logo\" alt=\"Games Logo\"></a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li><a onclick=\"toggleForm()\">Request a Game</a></li>\r\n");
      out.write("            <li><a href=\"/logout.jsp\">");
      out.print( session.getAttribute("username") );
      out.write("</a></li>\r\n");
      out.write("            <li><a href=\"/logout.jsp\">Logout</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"intro\">\r\n");
      out.write("        <h1>Game Store</h1>\r\n");
      out.write("        <form action=\"main.jsp\" method=\"get\">\r\n");
      out.write("            <!-- Dropdown for filtering by genre -->\r\n");
      out.write("            <label for=\"genre\">Filter by Genre:</label>\r\n");
      out.write("            <select name=\"genre\" id=\"genre\" multipl size=\"1\">\r\n");
      out.write("                <option value=\"none\">None</option>\r\n");
      out.write("                <option value=\"action\">Action</option>\r\n");
      out.write("                <option value=\"adventure\">Adventure</option>\r\n");
      out.write("                <option value=\"rpg\">RPG</option>\r\n");
      out.write("            </select>\r\n");
      out.write("    \r\n");
      out.write("            <!-- Dropdown for filtering by price -->\r\n");
      out.write("            <label for=\"price\">Filter by Price:</label>\r\n");
      out.write("            <select name=\"price\" id=\"price\">\r\n");
      out.write("                <option value=\"none\">None</option>\r\n");
      out.write("                <option value=\"0-20\">$0 - $20</option>\r\n");
      out.write("                <option value=\"21-50\">$21 - $50</option>\r\n");
      out.write("                <option value=\"51-70\">$51 - $69.99</option>\r\n");
      out.write("            </select>\r\n");
      out.write("    \r\n");
      out.write("            <button type=\"submit\" class=\"corebtn\">Filter</button>\r\n");
      out.write("        </form>\r\n");
      out.write("        <div class=\"search-bar\">\r\n");
      out.write("            <form action=\"/search.jsp\" method=\"get\">\r\n");
      out.write("                <input type=\"text\" name=\"search\" placeholder=\"Search...\">\r\n");
      out.write("                <button type=\"submit\">Search</button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"gamedisplay\">\r\n");
      out.write("        <div class=\"FilterMenu\">\r\n");
      out.write("            <button class=\"corebtn filter-btn\" onclick=\"toggleFilterMenu()\">Filter</button>\r\n");
      out.write("            <div class=\"filter-menu\" id=\"filterMenu\">\r\n");
      out.write("                <button class=\"exitbtnFilter\" onclick=\"toggleFilterMenu()\">X</button>\r\n");
      out.write("            \r\n");
      out.write("                <form action=\"\" method=\"get\">\r\n");
      out.write("                    <label for=\"genre\">Filter by Genre:</label>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <input type=\"checkbox\" class=\"genre-checkbox\" name=\"genre\" value=\"action\"> Action\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <input type=\"checkbox\" class=\"genre-checkbox\" name=\"genre\" value=\"adventure\"> Adventure\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <input type=\"checkbox\" class=\"genre-checkbox\" name=\"genre\" value=\"rpg\"> RPG\r\n");
      out.write("                    <!-- Add more genres as needed -->\r\n");
      out.write("                    <br>\r\n");
      out.write("            \r\n");
      out.write("                    <label for=\"price\">Filter by Price:</label>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <select name=\"price\" id=\"price\">\r\n");
      out.write("                        <option value=\"none\">None</option>\r\n");
      out.write("                        <option value=\"0-20\">$0 - $20</option>\r\n");
      out.write("                        <option value=\"21-50\">$21 - $50</option>\r\n");
      out.write("                        <option value=\"51-70\">$51 - $69.99</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                    \r\n");
      out.write("                    <br>\r\n");
      out.write("                    <button type=\"submit\" class=\"corebtn\">Filter</button>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"game-grid\">\r\n");
      out.write("            ");

            String[] selectedGenres = request.getParameterValues("genre");
            String selectedPrice = request.getParameter("price");
            String query = null;
            if (selectedGenres != null && selectedGenres.length > 0 && "none".equals(selectedGenres[0]) && "none".equals(selectedPrice)) {
                query = "SELECT game.*, genre.GenreName, genre.Description, MIN(currentprice.amount) " +
                        "FROM game " +
                        "JOIN genre ON game.GenreID = genre.GenreID " +
                        "JOIN currentprice ON game.gameid = currentprice.gameid " +
                        "GROUP BY game.gameid";
            }
            else{
    
                query = "SELECT game.*, genre.GenreName, genre.Description, MIN(currentprice.amount) " +
                "FROM game " +
                "JOIN genre ON game.GenreID = genre.GenreID " +
                "JOIN currentprice ON game.gameid = currentprice.gameid ";
        
                StringBuilder queryBuilder = new StringBuilder(query);
                if(selectedGenres!=null){
                    selectedGenres = Arrays.stream(selectedGenres)
                    .filter(genre -> !"none".equals(genre))
                    .toArray(String[]::new);
                }

                // Check if there are selected genres
                if (selectedGenres != null && selectedGenres.length > 0) {
                    queryBuilder.append("WHERE genre.GenreName IN (");

                    for (int i = 0; i < selectedGenres.length; i++) {
                        queryBuilder.append("'").append(selectedGenres[i]).append("'");
                        if (i < selectedGenres.length - 1) {
                            queryBuilder.append(", ");
                        }
                    }
                    queryBuilder.append(") ");
                }
                if (selectedPrice != null && !(selectedPrice.equals("none"))) {
                    String[] priceRange = selectedPrice.split("-");
                    if (priceRange.length == 2) {
                        queryBuilder.append("GROUP BY game.gameid HAVING MIN(currentprice.amount) BETWEEN ")
                        .append(priceRange[0]).append(" AND ").append(priceRange[1]);
                    }
                }else{
                    queryBuilder.append("GROUP BY game.gameid");
                }
    
                query = queryBuilder.toString();
            }
            out.println(query);
            // Convert StringBuilder to String
            Connection con = null;
            Statement stmt = null;
            ResultSet rs = null;
            String user = "root";
            String password = "013626210!";
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gamepickerdb?autoReconnect=true&useSSL=false", user, password);
    
                stmt = con.createStatement();
                rs = stmt.executeQuery(query);
                while (rs.next()) {
            
      out.write("\r\n");
      out.write("            <div class=\"game-item\">\r\n");
      out.write("                <img class=\"game-image\" src=\"");
      out.print( rs.getString("Link") );
      out.write("\" alt=\"");
      out.print( rs.getString("GameName") );
      out.write("\">\r\n");
      out.write("                <br>\r\n");
      out.write("                <a href=\"searchedGame.jsp?gameName=");
      out.print( rs.getString("GameName") );
      out.write('"');
      out.write('>');
      out.print( rs.getString("GameName") );
      out.write("</a>\r\n");
      out.write("                <br>\r\n");
      out.write("                Price: $");
      out.print( rs.getString("min(currentprice.amount)") );
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            ");

                }
                rs.close();
                stmt.close();
                con.close();
            } catch (SQLException e) {
                out.println("SQLException caught: " + e.getMessage());
                e.printStackTrace();
            }
            
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"requestGameForm\">\r\n");
      out.write("        <button class=\"exitButton\" onclick=\"toggleForm()\">X</button>\r\n");
      out.write("        <form action=\"processingform.jsp\" method=\"post\">\r\n");
      out.write("            <label for=\"gameName\">Game Name:</label>\r\n");
      out.write("            <input type=\"text\" id=\"gameName\" name=\"gameName\" required><br>\r\n");
      out.write("\r\n");
      out.write("            <label for=\"UserID\">UserID:</label>\r\n");
      out.write("            <input type=\"text\" id=\"UserID\" name=\"UserID\" value=\"");
      out.print( session.getAttribute("userID"));
      out.write("\" required><br>\r\n");
      out.write("\r\n");
      out.write("            <label for=\"WebsiteURL\">Website URL:</label>\r\n");
      out.write("            <input type=\"text\" id=\"WebsiteURL\" name=\"WebsiteURL\" required><br>\r\n");
      out.write("\r\n");
      out.write("            <input type=\"submit\" value=\"Submit\">\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script>\r\n");
      out.write("        function toggleForm() {\r\n");
      out.write("            var requestGameForm = document.getElementById(\"requestGameForm\");\r\n");
      out.write("            var overlay = document.getElementById(\"overlay\");\r\n");
      out.write("\r\n");
      out.write("            // Toggle the \"show\" class on both the form and overlay\r\n");
      out.write("            requestGameForm.classList.toggle(\"show\");\r\n");
      out.write("            overlay.classList.toggle(\"show\");\r\n");
      out.write("        }\r\n");
      out.write("        function toggleFilterMenu() {\r\n");
      out.write("    \r\n");
      out.write("            var overlay = document.getElementById(\"overlay\");\r\n");
      out.write("            overlay.classList.toggle(\"show\");\r\n");
      out.write("            var filterMenu = document.getElementById(\"filterMenu\");\r\n");
      out.write("            filterMenu.style.display = (filterMenu.style.display === \"block\") ? \"none\" : \"block\";\r\n");
      out.write("        }\r\n");
      out.write("    \r\n");
      out.write("        \r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
